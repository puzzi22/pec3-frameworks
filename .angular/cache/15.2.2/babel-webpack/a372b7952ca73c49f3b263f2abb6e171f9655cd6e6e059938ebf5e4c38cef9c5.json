{"ast":null,"code":"import _asyncToGenerator from \"/Users/pierre-antoinetremblay/Desktop/blog-uoc-project-front/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport { createEffect, ofType } from '@ngrx/effects';\nimport { of } from 'rxjs';\nimport { catchError, exhaustMap, finalize, map } from 'rxjs/operators';\nimport * as AuthActions from '../actions';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@ngrx/effects\";\nimport * as i2 from \"../services/auth.service\";\nimport * as i3 from \"@angular/router\";\nimport * as i4 from \"src/app/Shared/Services/shared.service\";\nexport class AuthEffects {\n  constructor(actions$, authService, router, sharedService) {\n    var _this = this;\n    this.actions$ = actions$;\n    this.authService = authService;\n    this.router = router;\n    this.sharedService = sharedService;\n    this.login$ = createEffect(() => this.actions$.pipe(ofType(AuthActions.login), exhaustMap(({\n      credentials\n    }) => this.authService.login(credentials).pipe(map(userToken => {\n      const credentialsTemp = {\n        email: credentials.email,\n        password: credentials.password,\n        user_id: userToken.user_id,\n        access_token: userToken.access_token\n      };\n      return AuthActions.loginSuccess({\n        credentials: credentialsTemp\n      });\n    }), catchError(error => {\n      return of(AuthActions.loginFailure({\n        payload: error\n      }));\n    }), finalize( /*#__PURE__*/_asyncToGenerator(function* () {\n      yield _this.sharedService.managementToast('loginFeedback', _this.responseOK, _this.errorResponse);\n      if (_this.responseOK) {\n        _this.router.navigateByUrl('home');\n      }\n    }))))));\n    this.loginSuccess$ = createEffect(() => this.actions$.pipe(ofType(AuthActions.loginSuccess), map(() => {\n      this.responseOK = true;\n    })), {\n      dispatch: false\n    });\n    this.loginFailure$ = createEffect(() => this.actions$.pipe(ofType(AuthActions.loginFailure), map(error => {\n      this.responseOK = false;\n      this.errorResponse = error.payload.error;\n      this.sharedService.errorLog(error.payload.error);\n    })), {\n      dispatch: false\n    });\n    this.responseOK = false;\n  }\n}\nAuthEffects.ɵfac = function AuthEffects_Factory(t) {\n  return new (t || AuthEffects)(i0.ɵɵinject(i1.Actions), i0.ɵɵinject(i2.AuthService), i0.ɵɵinject(i3.Router), i0.ɵɵinject(i4.SharedService));\n};\nAuthEffects.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: AuthEffects,\n  factory: AuthEffects.ɵfac\n});","map":{"version":3,"names":["createEffect","ofType","of","catchError","exhaustMap","finalize","map","AuthActions","AuthEffects","constructor","actions$","authService","router","sharedService","_this","login$","pipe","login","credentials","userToken","credentialsTemp","email","password","user_id","access_token","loginSuccess","error","loginFailure","payload","_asyncToGenerator","managementToast","responseOK","errorResponse","navigateByUrl","loginSuccess$","dispatch","loginFailure$","errorLog","i0","ɵɵinject","i1","Actions","i2","AuthService","i3","Router","i4","SharedService","factory","ɵfac"],"sources":["/Users/pierre-antoinetremblay/Desktop/blog-uoc-project-front/src/app/Auth/effects/auth.effects.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { Actions, createEffect, ofType } from '@ngrx/effects';\r\nimport { of } from 'rxjs';\r\nimport { catchError, exhaustMap, finalize, map } from 'rxjs/operators';\r\nimport { SharedService } from 'src/app/Shared/Services/shared.service';\r\nimport * as AuthActions from '../actions';\r\nimport { AuthDTO } from '../models/auth.dto';\r\nimport { AuthService } from '../services/auth.service';\r\n\r\n@Injectable()\r\nexport class AuthEffects {\r\n  private responseOK: boolean;\r\n  private errorResponse: any;\r\n\r\n  constructor(\r\n    private actions$: Actions,\r\n    private authService: AuthService,\r\n    private router: Router,\r\n    private sharedService: SharedService\r\n  ) {\r\n    this.responseOK = false;\r\n  }\r\n  login$ = createEffect(() =>\r\n    this.actions$.pipe(\r\n      ofType(AuthActions.login),\r\n      exhaustMap(({ credentials }) =>\r\n        this.authService.login(credentials).pipe(\r\n          map((userToken) => {\r\n            const credentialsTemp: AuthDTO = {\r\n              email: credentials.email,\r\n              password: credentials.password,\r\n              user_id: userToken.user_id,\r\n              access_token: userToken.access_token,\r\n            };\r\n\r\n            return AuthActions.loginSuccess({ credentials: credentialsTemp });\r\n          }),\r\n          catchError((error) => {\r\n            return of(AuthActions.loginFailure({ payload: error }));\r\n          }),\r\n          finalize(async () => {\r\n            await this.sharedService.managementToast(\r\n              'loginFeedback',\r\n              this.responseOK,\r\n              this.errorResponse\r\n            );\r\n\r\n            if (this.responseOK) {\r\n              this.router.navigateByUrl('home');\r\n            }\r\n          })\r\n        )\r\n      )\r\n    )\r\n  );\r\n\r\n  loginSuccess$ = createEffect(\r\n    () =>\r\n      this.actions$.pipe(\r\n        ofType(AuthActions.loginSuccess),\r\n        map(() => {\r\n          this.responseOK = true;\r\n        })\r\n      ),\r\n    { dispatch: false }\r\n  );\r\n\r\n  loginFailure$ = createEffect(\r\n    () =>\r\n      this.actions$.pipe(\r\n        ofType(AuthActions.loginFailure),\r\n        map((error) => {\r\n          this.responseOK = false;\r\n          this.errorResponse = error.payload.error;\r\n          this.sharedService.errorLog(error.payload.error);\r\n        })\r\n      ),\r\n    { dispatch: false }\r\n  );\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}