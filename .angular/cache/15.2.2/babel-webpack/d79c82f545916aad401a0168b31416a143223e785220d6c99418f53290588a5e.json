{"ast":null,"code":"import * as i0 from \"@angular/core\";\nexport class FormatDatePipe {\n  transform(value, ...args) {\n    let dd;\n    let mm;\n    let yyyy;\n    let ddFormat;\n    let mmFormat;\n    let newFormat = '';\n    let dateTransform = new Date(value);\n    let type = args[0];\n    dd = dateTransform.getDate();\n    mm = dateTransform.getMonth() + 1;\n    yyyy = dateTransform.getFullYear();\n    ddFormat = this.needZero(dd);\n    mmFormat = this.needZero(mm);\n    if (type === 1) {\n      newFormat = ddFormat + mmFormat + yyyy;\n    }\n    if (type === 2) {\n      newFormat = ddFormat + ' / ' + mmFormat + ' / ' + yyyy;\n    }\n    if (type === 3) {\n      newFormat = ddFormat + '/' + mmFormat + '/' + yyyy;\n    }\n    if (type === 4) {\n      newFormat = yyyy + '-' + mmFormat + '-' + ddFormat;\n    }\n    return newFormat;\n  }\n  needZero(checkNumber) {\n    return checkNumber < 10 ? '0' + checkNumber : String(checkNumber);\n  }\n}\nFormatDatePipe.ɵfac = function FormatDatePipe_Factory(t) {\n  return new (t || FormatDatePipe)();\n};\nFormatDatePipe.ɵpipe = /*@__PURE__*/i0.ɵɵdefinePipe({\n  name: \"formatDate\",\n  type: FormatDatePipe,\n  pure: true\n});","map":{"version":3,"names":["FormatDatePipe","transform","value","args","dd","mm","yyyy","ddFormat","mmFormat","newFormat","dateTransform","Date","type","getDate","getMonth","getFullYear","needZero","checkNumber","String","pure"],"sources":["/Users/pierre-antoinetremblay/Desktop/blog-uoc-project-front/src/app/Shared/Pipes/format-date.pipe.ts"],"sourcesContent":["import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n  name: 'formatDate',\n})\nexport class FormatDatePipe implements PipeTransform {\n  transform(value: Date, ...args: number[]): unknown {\n    let dd: number;\n    let mm: number;\n    let yyyy: number;\n    let ddFormat: string;\n    let mmFormat: string;\n    let newFormat: string = '';\n\n    let dateTransform = new Date(value);\n    let type: number = args[0];\n\n    dd = dateTransform.getDate();\n    mm = dateTransform.getMonth() + 1;\n    yyyy = dateTransform.getFullYear();\n\n    ddFormat = this.needZero(dd);\n    mmFormat = this.needZero(mm);\n\n    if (type === 1) {\n      newFormat = ddFormat + mmFormat + yyyy;\n    }\n    if (type === 2) {\n      newFormat = ddFormat + ' / ' + mmFormat + ' / ' + yyyy;\n    }\n    if (type === 3) {\n      newFormat = ddFormat + '/' + mmFormat + '/' + yyyy;\n    }\n    if (type === 4) {\n      newFormat = yyyy + '-' + mmFormat + '-' + ddFormat;\n    }\n\n    return newFormat;\n  }\n\n  private needZero(checkNumber: number): string {\n    return checkNumber < 10 ? '0' + checkNumber : String(checkNumber);\n  }\n}\n"],"mappings":";AAKA,OAAM,MAAOA,cAAc;EACzBC,SAASA,CAACC,KAAW,EAAE,GAAGC,IAAc;IACtC,IAAIC,EAAU;IACd,IAAIC,EAAU;IACd,IAAIC,IAAY;IAChB,IAAIC,QAAgB;IACpB,IAAIC,QAAgB;IACpB,IAAIC,SAAS,GAAW,EAAE;IAE1B,IAAIC,aAAa,GAAG,IAAIC,IAAI,CAACT,KAAK,CAAC;IACnC,IAAIU,IAAI,GAAWT,IAAI,CAAC,CAAC,CAAC;IAE1BC,EAAE,GAAGM,aAAa,CAACG,OAAO,EAAE;IAC5BR,EAAE,GAAGK,aAAa,CAACI,QAAQ,EAAE,GAAG,CAAC;IACjCR,IAAI,GAAGI,aAAa,CAACK,WAAW,EAAE;IAElCR,QAAQ,GAAG,IAAI,CAACS,QAAQ,CAACZ,EAAE,CAAC;IAC5BI,QAAQ,GAAG,IAAI,CAACQ,QAAQ,CAACX,EAAE,CAAC;IAE5B,IAAIO,IAAI,KAAK,CAAC,EAAE;MACdH,SAAS,GAAGF,QAAQ,GAAGC,QAAQ,GAAGF,IAAI;;IAExC,IAAIM,IAAI,KAAK,CAAC,EAAE;MACdH,SAAS,GAAGF,QAAQ,GAAG,KAAK,GAAGC,QAAQ,GAAG,KAAK,GAAGF,IAAI;;IAExD,IAAIM,IAAI,KAAK,CAAC,EAAE;MACdH,SAAS,GAAGF,QAAQ,GAAG,GAAG,GAAGC,QAAQ,GAAG,GAAG,GAAGF,IAAI;;IAEpD,IAAIM,IAAI,KAAK,CAAC,EAAE;MACdH,SAAS,GAAGH,IAAI,GAAG,GAAG,GAAGE,QAAQ,GAAG,GAAG,GAAGD,QAAQ;;IAGpD,OAAOE,SAAS;EAClB;EAEQO,QAAQA,CAACC,WAAmB;IAClC,OAAOA,WAAW,GAAG,EAAE,GAAG,GAAG,GAAGA,WAAW,GAAGC,MAAM,CAACD,WAAW,CAAC;EACnE;;AArCWjB,cAAc,C;mBAAdA,cAAc;AAAA;AAAdA,cAAc,C;;QAAdA,cAAc;EAAAmB,IAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}