{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@ngrx/store\";\nexport class AuthInterceptorService {\n  constructor(store) {\n    this.store = store;\n    this.access_token = '';\n    this.store.select('auth').subscribe(auth => {\n      this.access_token = '';\n      if (auth.credentials.access_token) {\n        this.access_token = auth.credentials.access_token;\n      }\n    });\n  }\n  intercept(req, next) {\n    if (this.access_token) {\n      req = req.clone({\n        setHeaders: {\n          'Content-Type': 'application/json; charset=utf-8',\n          Accept: 'application/json',\n          Authorization: `Bearer ${this.access_token}`\n        }\n      });\n    }\n    return next.handle(req);\n  }\n}\nAuthInterceptorService.ɵfac = function AuthInterceptorService_Factory(t) {\n  return new (t || AuthInterceptorService)(i0.ɵɵinject(i1.Store));\n};\nAuthInterceptorService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: AuthInterceptorService,\n  factory: AuthInterceptorService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"names":["AuthInterceptorService","constructor","store","access_token","select","subscribe","auth","credentials","intercept","req","next","clone","setHeaders","Accept","Authorization","handle","i0","ɵɵinject","i1","Store","factory","ɵfac","providedIn"],"sources":["/Users/pierre-antoinetremblay/Desktop/blog-uoc-project-front/src/app/Shared/Services/auth-interceptor.service.ts"],"sourcesContent":["import {\n  HttpEvent,\n  HttpHandler,\n  HttpInterceptor,\n  HttpRequest,\n} from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Store } from '@ngrx/store';\nimport { Observable } from 'rxjs';\nimport { AppState } from '../../app.reducers';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class AuthInterceptorService implements HttpInterceptor {\n  private access_token: string = '';\n\n  constructor(private store: Store<AppState>) {\n    this.store.select('auth').subscribe((auth) => {\n      this.access_token = '';\n      if (auth.credentials.access_token) {\n        this.access_token = auth.credentials.access_token;\n      }\n    });\n  }\n\n  intercept(\n    req: HttpRequest<any>,\n    next: HttpHandler\n  ): Observable<HttpEvent<any>> {\n    if (this.access_token) {\n      req = req.clone({\n        setHeaders: {\n          'Content-Type': 'application/json; charset=utf-8',\n          Accept: 'application/json',\n          Authorization: `Bearer ${this.access_token}`,\n        },\n      });\n    }\n\n    return next.handle(req);\n  }\n}\n"],"mappings":";;AAcA,OAAM,MAAOA,sBAAsB;EAGjCC,YAAoBC,KAAsB;IAAtB,KAAAA,KAAK,GAALA,KAAK;IAFjB,KAAAC,YAAY,GAAW,EAAE;IAG/B,IAAI,CAACD,KAAK,CAACE,MAAM,CAAC,MAAM,CAAC,CAACC,SAAS,CAAEC,IAAI,IAAI;MAC3C,IAAI,CAACH,YAAY,GAAG,EAAE;MACtB,IAAIG,IAAI,CAACC,WAAW,CAACJ,YAAY,EAAE;QACjC,IAAI,CAACA,YAAY,GAAGG,IAAI,CAACC,WAAW,CAACJ,YAAY;;IAErD,CAAC,CAAC;EACJ;EAEAK,SAASA,CACPC,GAAqB,EACrBC,IAAiB;IAEjB,IAAI,IAAI,CAACP,YAAY,EAAE;MACrBM,GAAG,GAAGA,GAAG,CAACE,KAAK,CAAC;QACdC,UAAU,EAAE;UACV,cAAc,EAAE,iCAAiC;UACjDC,MAAM,EAAE,kBAAkB;UAC1BC,aAAa,EAAE,UAAU,IAAI,CAACX,YAAY;;OAE7C,CAAC;;IAGJ,OAAOO,IAAI,CAACK,MAAM,CAACN,GAAG,CAAC;EACzB;;AA3BWT,sBAAsB,C;mBAAtBA,sBAAsB,EAAAgB,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,KAAA;AAAA;AAAtBnB,sBAAsB,C;SAAtBA,sBAAsB;EAAAoB,OAAA,EAAtBpB,sBAAsB,CAAAqB,IAAA;EAAAC,UAAA,EAFrB;AAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}