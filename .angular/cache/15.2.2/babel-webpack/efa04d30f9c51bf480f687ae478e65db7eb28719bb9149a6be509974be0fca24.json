{"ast":null,"code":"import _asyncToGenerator from \"/Users/pierre-antoinetremblay/Desktop/blog-uoc-project-front/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport { createEffect, ofType } from '@ngrx/effects';\nimport { of } from 'rxjs';\nimport { catchError, exhaustMap, finalize, map } from 'rxjs/operators';\nimport * as UserActions from '../actions';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@ngrx/effects\";\nimport * as i2 from \"../services/user.service\";\nimport * as i3 from \"@angular/router\";\nimport * as i4 from \"src/app/Shared/Services/shared.service\";\nexport class UserEffects {\n  constructor(actions$, userService, router, sharedService) {\n    var _this = this;\n    this.actions$ = actions$;\n    this.userService = userService;\n    this.router = router;\n    this.sharedService = sharedService;\n    this.register$ = createEffect(() => this.actions$.pipe(ofType(UserActions.register), exhaustMap(({\n      user\n    }) => this.userService.register(user).pipe(map(user => {\n      return UserActions.registerSuccess({\n        user: user\n      });\n    }), catchError(error => {\n      return of(UserActions.registerFailure({\n        payload: error\n      }));\n    }), finalize( /*#__PURE__*/_asyncToGenerator(function* () {\n      yield _this.sharedService.managementToast('registerFeedback', _this.responseOK, _this.errorResponse);\n      if (_this.responseOK) {\n        _this.router.navigateByUrl('home');\n      }\n    }))))));\n    this.registerSuccess$ = createEffect(() => this.actions$.pipe(ofType(UserActions.registerSuccess), map(() => {\n      this.responseOK = true;\n    })), {\n      dispatch: false\n    });\n    this.registerFailure$ = createEffect(() => this.actions$.pipe(ofType(UserActions.registerFailure), map(error => {\n      this.responseOK = false;\n      this.errorResponse = error.payload.error;\n      this.sharedService.errorLog(error.payload.error);\n    })), {\n      dispatch: false\n    });\n    this.updateUser$ = createEffect(() => this.actions$.pipe(ofType(UserActions.updateUser), exhaustMap(({\n      userId,\n      user\n    }) => this.userService.updateUser(userId, user).pipe(map(user => {\n      return UserActions.updateUserSuccess({\n        userId: userId,\n        user: user\n      });\n    }), catchError(error => {\n      return of(UserActions.updateUserFailure({\n        payload: error\n      }));\n    }), finalize( /*#__PURE__*/_asyncToGenerator(function* () {\n      yield _this.sharedService.managementToast('profileFeedback', _this.responseOK, _this.errorResponse);\n    }))))));\n    this.updateUserSuccess$ = createEffect(() => this.actions$.pipe(ofType(UserActions.updateUserSuccess), map(() => {\n      this.responseOK = true;\n    })), {\n      dispatch: false\n    });\n    this.updateUserFailure$ = createEffect(() => this.actions$.pipe(ofType(UserActions.updateUserFailure), map(error => {\n      this.responseOK = false;\n      this.errorResponse = error.payload.error;\n      this.sharedService.errorLog(error.payload.error);\n    })), {\n      dispatch: false\n    });\n    this.getUserById$ = createEffect(() => this.actions$.pipe(ofType(UserActions.getUserById), exhaustMap(({\n      userId\n    }) => this.userService.getUserById(userId).pipe(map(user => {\n      return UserActions.getUserByIdSuccess({\n        userId: userId,\n        user: user\n      });\n    }), catchError(error => {\n      return of(UserActions.getUserByIdFailure({\n        payload: error\n      }));\n    })))));\n    this.getUserByIdFailure$ = createEffect(() => this.actions$.pipe(ofType(UserActions.getUserByIdFailure), map(error => {\n      this.responseOK = false;\n      this.errorResponse = error.payload.error;\n      this.sharedService.errorLog(error.payload.error);\n    })), {\n      dispatch: false\n    });\n    this.responseOK = false;\n  }\n}\nUserEffects.ɵfac = function UserEffects_Factory(t) {\n  return new (t || UserEffects)(i0.ɵɵinject(i1.Actions), i0.ɵɵinject(i2.UserService), i0.ɵɵinject(i3.Router), i0.ɵɵinject(i4.SharedService));\n};\nUserEffects.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: UserEffects,\n  factory: UserEffects.ɵfac\n});","map":{"version":3,"names":["createEffect","ofType","of","catchError","exhaustMap","finalize","map","UserActions","UserEffects","constructor","actions$","userService","router","sharedService","_this","register$","pipe","register","user","registerSuccess","error","registerFailure","payload","_asyncToGenerator","managementToast","responseOK","errorResponse","navigateByUrl","registerSuccess$","dispatch","registerFailure$","errorLog","updateUser$","updateUser","userId","updateUserSuccess","updateUserFailure","updateUserSuccess$","updateUserFailure$","getUserById$","getUserById","getUserByIdSuccess","getUserByIdFailure","getUserByIdFailure$","i0","ɵɵinject","i1","Actions","i2","UserService","i3","Router","i4","SharedService","factory","ɵfac"],"sources":["/Users/pierre-antoinetremblay/Desktop/blog-uoc-project-front/src/app/User/effects/user.effects.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { Actions, createEffect, ofType } from '@ngrx/effects';\r\nimport { of } from 'rxjs';\r\nimport { catchError, exhaustMap, finalize, map } from 'rxjs/operators';\r\nimport { SharedService } from 'src/app/Shared/Services/shared.service';\r\nimport * as UserActions from '../actions';\r\nimport { UserService } from '../services/user.service';\r\n\r\n@Injectable()\r\nexport class UserEffects {\r\n  private responseOK: boolean;\r\n  private errorResponse: any;\r\n\r\n  constructor(\r\n    private actions$: Actions,\r\n    private userService: UserService,\r\n    private router: Router,\r\n    private sharedService: SharedService\r\n  ) {\r\n    this.responseOK = false;\r\n  }\r\n\r\n  register$ = createEffect(() =>\r\n    this.actions$.pipe(\r\n      ofType(UserActions.register),\r\n      exhaustMap(({ user }) =>\r\n        this.userService.register(user).pipe(\r\n          map((user) => {\r\n            return UserActions.registerSuccess({ user: user });\r\n          }),\r\n          catchError((error) => {\r\n            return of(UserActions.registerFailure({ payload: error }));\r\n          }),\r\n          finalize(async () => {\r\n            await this.sharedService.managementToast(\r\n              'registerFeedback',\r\n              this.responseOK,\r\n              this.errorResponse\r\n            );\r\n\r\n            if (this.responseOK) {\r\n              this.router.navigateByUrl('home');\r\n            }\r\n          })\r\n        )\r\n      )\r\n    )\r\n  );\r\n\r\n  registerSuccess$ = createEffect(\r\n    () =>\r\n      this.actions$.pipe(\r\n        ofType(UserActions.registerSuccess),\r\n        map(() => {\r\n          this.responseOK = true;\r\n        })\r\n      ),\r\n    { dispatch: false }\r\n  );\r\n\r\n  registerFailure$ = createEffect(\r\n    () =>\r\n      this.actions$.pipe(\r\n        ofType(UserActions.registerFailure),\r\n        map((error) => {\r\n          this.responseOK = false;\r\n          this.errorResponse = error.payload.error;\r\n          this.sharedService.errorLog(error.payload.error);\r\n        })\r\n      ),\r\n    { dispatch: false }\r\n  );\r\n\r\n  updateUser$ = createEffect(() =>\r\n    this.actions$.pipe(\r\n      ofType(UserActions.updateUser),\r\n      exhaustMap(({ userId, user }) =>\r\n        this.userService.updateUser(userId, user).pipe(\r\n          map((user) => {\r\n            return UserActions.updateUserSuccess({\r\n              userId: userId,\r\n              user: user,\r\n            });\r\n          }),\r\n          catchError((error) => {\r\n            return of(UserActions.updateUserFailure({ payload: error }));\r\n          }),\r\n          finalize(async () => {\r\n            await this.sharedService.managementToast(\r\n              'profileFeedback',\r\n              this.responseOK,\r\n              this.errorResponse\r\n            );\r\n          })\r\n        )\r\n      )\r\n    )\r\n  );\r\n\r\n  updateUserSuccess$ = createEffect(\r\n    () =>\r\n      this.actions$.pipe(\r\n        ofType(UserActions.updateUserSuccess),\r\n        map(() => {\r\n          this.responseOK = true;\r\n        })\r\n      ),\r\n    { dispatch: false }\r\n  );\r\n\r\n  updateUserFailure$ = createEffect(\r\n    () =>\r\n      this.actions$.pipe(\r\n        ofType(UserActions.updateUserFailure),\r\n        map((error) => {\r\n          this.responseOK = false;\r\n          this.errorResponse = error.payload.error;\r\n          this.sharedService.errorLog(error.payload.error);\r\n        })\r\n      ),\r\n    { dispatch: false }\r\n  );\r\n\r\n  getUserById$ = createEffect(() =>\r\n    this.actions$.pipe(\r\n      ofType(UserActions.getUserById),\r\n      exhaustMap(({ userId }) =>\r\n        this.userService.getUserById(userId).pipe(\r\n          map((user) => {\r\n            return UserActions.getUserByIdSuccess({\r\n              userId: userId,\r\n              user: user,\r\n            });\r\n          }),\r\n          catchError((error) => {\r\n            return of(UserActions.getUserByIdFailure({ payload: error }));\r\n          })\r\n        )\r\n      )\r\n    )\r\n  );\r\n\r\n  getUserByIdFailure$ = createEffect(\r\n    () =>\r\n      this.actions$.pipe(\r\n        ofType(UserActions.getUserByIdFailure),\r\n        map((error) => {\r\n          this.responseOK = false;\r\n          this.errorResponse = error.payload.error;\r\n          this.sharedService.errorLog(error.payload.error);\r\n        })\r\n      ),\r\n    { dispatch: false }\r\n  );\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}