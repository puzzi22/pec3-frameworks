{"ast":null,"code":"import * as PostsAction from '../../actions';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nimport * as i2 from \"@ngrx/store\";\nimport * as i3 from \"@angular/common\";\nfunction PostsListComponent_tr_20_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r3 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"tr\")(1, \"td\");\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"td\");\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"td\");\n    i0.ɵɵtext(6);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(7, \"td\");\n    i0.ɵɵtext(8);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(9, \"td\");\n    i0.ɵɵtext(10);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(11, \"td\")(12, \"button\", 0);\n    i0.ɵɵlistener(\"click\", function PostsListComponent_tr_20_Template_button_click_12_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r3);\n      const post_r1 = restoredCtx.$implicit;\n      const ctx_r2 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r2.updatePost(post_r1.postId));\n    });\n    i0.ɵɵtext(13, \"UPDATE\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(14, \"button\", 0);\n    i0.ɵɵlistener(\"click\", function PostsListComponent_tr_20_Template_button_click_14_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r3);\n      const post_r1 = restoredCtx.$implicit;\n      const ctx_r4 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r4.deletePost(post_r1.postId));\n    });\n    i0.ɵɵtext(15, \"DELETE\");\n    i0.ɵɵelementEnd()()();\n  }\n  if (rf & 2) {\n    const post_r1 = ctx.$implicit;\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(post_r1.postId);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(post_r1.title);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(post_r1.description);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(post_r1.num_likes);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(post_r1.num_dislikes);\n  }\n}\nexport class PostsListComponent {\n  constructor(router, store) {\n    this.router = router;\n    this.store = store;\n    this.userId = '';\n    this.posts = new Array();\n    this.store.select('auth').subscribe(auth => {\n      if (auth.credentials.user_id) {\n        this.userId = auth.credentials.user_id;\n      }\n    });\n    this.store.select('posts').subscribe(posts => {\n      this.posts = posts.posts;\n    });\n    this.loadPosts();\n  }\n  loadPosts() {\n    if (this.userId) {\n      this.store.dispatch(PostsAction.getPostsByUserId({\n        userId: this.userId\n      }));\n    }\n  }\n  createPost() {\n    this.router.navigateByUrl('/user/post/');\n  }\n  updatePost(postId) {\n    this.router.navigateByUrl('/user/post/' + postId);\n  }\n  deletePost(postId) {\n    // show confirmation popup\n    let result = confirm('Confirm delete post with id: ' + postId + ' .');\n    if (result) {\n      this.store.dispatch(PostsAction.deletePost({\n        postId: postId\n      }));\n    }\n  }\n}\nPostsListComponent.ɵfac = function PostsListComponent_Factory(t) {\n  return new (t || PostsListComponent)(i0.ɵɵdirectiveInject(i1.Router), i0.ɵɵdirectiveInject(i2.Store));\n};\nPostsListComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: PostsListComponent,\n  selectors: [[\"app-posts-list\"]],\n  decls: 21,\n  vars: 1,\n  consts: [[3, \"click\"], [4, \"ngFor\", \"ngForOf\"]],\n  template: function PostsListComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"h2\");\n      i0.ɵɵtext(1, \"Post List\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(2, \"button\", 0);\n      i0.ɵɵlistener(\"click\", function PostsListComponent_Template_button_click_2_listener() {\n        return ctx.createPost();\n      });\n      i0.ɵɵtext(3, \"ADD\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(4, \"table\")(5, \"thead\")(6, \"tr\")(7, \"th\");\n      i0.ɵɵtext(8, \"ID\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(9, \"th\");\n      i0.ɵɵtext(10, \"TITLE\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(11, \"th\");\n      i0.ɵɵtext(12, \"DESCRIPTION\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(13, \"th\");\n      i0.ɵɵtext(14, \"NUM LIKES\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(15, \"th\");\n      i0.ɵɵtext(16, \"NUM DISLIKES\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(17, \"th\");\n      i0.ɵɵtext(18, \"ACTIONS\");\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵelementStart(19, \"tbody\");\n      i0.ɵɵtemplate(20, PostsListComponent_tr_20_Template, 16, 5, \"tr\", 1);\n      i0.ɵɵelementEnd()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(20);\n      i0.ɵɵproperty(\"ngForOf\", ctx.posts);\n    }\n  },\n  dependencies: [i3.NgForOf],\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"names":["PostsAction","i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵlistener","PostsListComponent_tr_20_Template_button_click_12_listener","restoredCtx","ɵɵrestoreView","_r3","post_r1","$implicit","ctx_r2","ɵɵnextContext","ɵɵresetView","updatePost","postId","PostsListComponent_tr_20_Template_button_click_14_listener","ctx_r4","deletePost","ɵɵadvance","ɵɵtextInterpolate","title","description","num_likes","num_dislikes","PostsListComponent","constructor","router","store","userId","posts","Array","select","subscribe","auth","credentials","user_id","loadPosts","dispatch","getPostsByUserId","createPost","navigateByUrl","result","confirm","ɵɵdirectiveInject","i1","Router","i2","Store","selectors","decls","vars","consts","template","PostsListComponent_Template","rf","ctx","PostsListComponent_Template_button_click_2_listener","ɵɵtemplate","PostsListComponent_tr_20_Template","ɵɵproperty"],"sources":["/Users/pierre-antoinetremblay/Desktop/blog-uoc-project-front/src/app/Post/components/posts-list/posts-list.component.ts","/Users/pierre-antoinetremblay/Desktop/blog-uoc-project-front/src/app/Post/components/posts-list/posts-list.component.html"],"sourcesContent":["import { Component } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { Store } from '@ngrx/store';\nimport { AppState } from 'src/app/app.reducers';\nimport * as PostsAction from '../../actions';\nimport { PostDTO } from '../../models/post.dto';\n\n@Component({\n  selector: 'app-posts-list',\n  templateUrl: './posts-list.component.html',\n  styleUrls: ['./posts-list.component.scss'],\n})\nexport class PostsListComponent {\n  posts: PostDTO[];\n  private userId: string;\n\n  constructor(private router: Router, private store: Store<AppState>) {\n    this.userId = '';\n    this.posts = new Array<PostDTO>();\n\n    this.store.select('auth').subscribe((auth) => {\n      if (auth.credentials.user_id) {\n        this.userId = auth.credentials.user_id;\n      }\n    });\n\n    this.store.select('posts').subscribe((posts) => {\n      this.posts = posts.posts;\n    });\n\n    this.loadPosts();\n  }\n\n  private loadPosts(): void {\n    if (this.userId) {\n      this.store.dispatch(\n        PostsAction.getPostsByUserId({ userId: this.userId })\n      );\n    }\n  }\n\n  createPost(): void {\n    this.router.navigateByUrl('/user/post/');\n  }\n\n  updatePost(postId: string): void {\n    this.router.navigateByUrl('/user/post/' + postId);\n  }\n\n  deletePost(postId: string): void {\n    // show confirmation popup\n    let result = confirm('Confirm delete post with id: ' + postId + ' .');\n    if (result) {\n      this.store.dispatch(PostsAction.deletePost({ postId: postId }));\n    }\n  }\n}\n","<h2>Post List</h2>\n<button (click)=\"createPost()\">ADD</button>\n\n<table>\n  <thead>\n    <tr>\n      <th>ID</th>\n      <th>TITLE</th>\n      <th>DESCRIPTION</th>\n      <th>NUM LIKES</th>\n      <th>NUM DISLIKES</th>\n      <th>ACTIONS</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr *ngFor=\"let post of posts\">\n      <td>{{ post.postId }}</td>\n      <td>{{ post.title }}</td>\n      <td>{{ post.description }}</td>\n      <td>{{ post.num_likes }}</td>\n      <td>{{ post.num_dislikes }}</td>\n\n      <td>\n        <button (click)=\"updatePost(post.postId)\">UPDATE</button>\n        <button (click)=\"deletePost(post.postId)\">DELETE</button>\n      </td>\n    </tr>\n  </tbody>\n</table>\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}