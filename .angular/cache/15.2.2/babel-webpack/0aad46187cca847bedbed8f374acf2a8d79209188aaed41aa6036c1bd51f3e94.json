{"ast":null,"code":"import { catchError } from 'rxjs/operators';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nimport * as i2 from \"src/app/Shared/Services/shared.service\";\nexport class CategoryService {\n  constructor(http, sharedService) {\n    this.http = http;\n    this.sharedService = sharedService;\n    this.controller = 'categories';\n    this.urlBlogUocApi = 'http://localhost:3000/' + this.controller;\n  }\n  getCategoriesByUserId(userId) {\n    return this.http.get('http://localhost:3000/users/categories/' + userId).pipe(catchError(this.sharedService.handleError));\n  }\n  createCategory(category) {\n    return this.http.post(this.urlBlogUocApi, category).pipe(catchError(this.sharedService.handleError));\n  }\n  getCategoryById(categoryId) {\n    return this.http.get(this.urlBlogUocApi + '/' + categoryId).pipe(catchError(this.sharedService.handleError));\n  }\n  updateCategory(categoryId, category) {\n    return this.http.put(this.urlBlogUocApi + '/' + categoryId, category).pipe(catchError(this.sharedService.handleError));\n  }\n  deleteCategory(categoryId) {\n    return this.http.delete(this.urlBlogUocApi + '/' + categoryId).pipe(catchError(this.sharedService.handleError));\n  }\n}\nCategoryService.ɵfac = function CategoryService_Factory(t) {\n  return new (t || CategoryService)(i0.ɵɵinject(i1.HttpClient), i0.ɵɵinject(i2.SharedService));\n};\nCategoryService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: CategoryService,\n  factory: CategoryService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"names":["catchError","CategoryService","constructor","http","sharedService","controller","urlBlogUocApi","getCategoriesByUserId","userId","get","pipe","handleError","createCategory","category","post","getCategoryById","categoryId","updateCategory","put","deleteCategory","delete","i0","ɵɵinject","i1","HttpClient","i2","SharedService","factory","ɵfac","providedIn"],"sources":["/Users/pierre-antoinetremblay/Desktop/blog-uoc-project-front/src/app/Category/services/category.service.ts"],"sourcesContent":["import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { catchError } from 'rxjs/operators';\nimport { SharedService } from 'src/app/Shared/Services/shared.service';\nimport { CategoryDTO } from '../models/category.dto';\n\nexport interface deleteResponse {\n  affected: number;\n}\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class CategoryService {\n  private urlBlogUocApi: string;\n  private controller: string;\n\n  constructor(private http: HttpClient, private sharedService: SharedService) {\n    this.controller = 'categories';\n    this.urlBlogUocApi = 'http://localhost:3000/' + this.controller;\n  }\n\n  getCategoriesByUserId(userId: string): Observable<CategoryDTO[]> {\n    return this.http\n      .get<CategoryDTO[]>('http://localhost:3000/users/categories/' + userId)\n      .pipe(catchError(this.sharedService.handleError));\n  }\n\n  createCategory(category: CategoryDTO): Observable<CategoryDTO> {\n    return this.http\n      .post<CategoryDTO>(this.urlBlogUocApi, category)\n      .pipe(catchError(this.sharedService.handleError));\n  }\n\n  getCategoryById(categoryId: string): Observable<CategoryDTO> {\n    return this.http\n      .get<CategoryDTO>(this.urlBlogUocApi + '/' + categoryId)\n      .pipe(catchError(this.sharedService.handleError));\n  }\n\n  updateCategory(\n    categoryId: string,\n    category: CategoryDTO\n  ): Observable<CategoryDTO> {\n    return this.http\n      .put<CategoryDTO>(this.urlBlogUocApi + '/' + categoryId, category)\n      .pipe(catchError(this.sharedService.handleError));\n  }\n\n  deleteCategory(categoryId: string): Observable<deleteResponse> {\n    return this.http\n      .delete<deleteResponse>(this.urlBlogUocApi + '/' + categoryId)\n      .pipe(catchError(this.sharedService.handleError));\n  }\n}\n"],"mappings":"AAGA,SAASA,UAAU,QAAQ,gBAAgB;;;;AAW3C,OAAM,MAAOC,eAAe;EAI1BC,YAAoBC,IAAgB,EAAUC,aAA4B;IAAtD,KAAAD,IAAI,GAAJA,IAAI;IAAsB,KAAAC,aAAa,GAAbA,aAAa;IACzD,IAAI,CAACC,UAAU,GAAG,YAAY;IAC9B,IAAI,CAACC,aAAa,GAAG,wBAAwB,GAAG,IAAI,CAACD,UAAU;EACjE;EAEAE,qBAAqBA,CAACC,MAAc;IAClC,OAAO,IAAI,CAACL,IAAI,CACbM,GAAG,CAAgB,yCAAyC,GAAGD,MAAM,CAAC,CACtEE,IAAI,CAACV,UAAU,CAAC,IAAI,CAACI,aAAa,CAACO,WAAW,CAAC,CAAC;EACrD;EAEAC,cAAcA,CAACC,QAAqB;IAClC,OAAO,IAAI,CAACV,IAAI,CACbW,IAAI,CAAc,IAAI,CAACR,aAAa,EAAEO,QAAQ,CAAC,CAC/CH,IAAI,CAACV,UAAU,CAAC,IAAI,CAACI,aAAa,CAACO,WAAW,CAAC,CAAC;EACrD;EAEAI,eAAeA,CAACC,UAAkB;IAChC,OAAO,IAAI,CAACb,IAAI,CACbM,GAAG,CAAc,IAAI,CAACH,aAAa,GAAG,GAAG,GAAGU,UAAU,CAAC,CACvDN,IAAI,CAACV,UAAU,CAAC,IAAI,CAACI,aAAa,CAACO,WAAW,CAAC,CAAC;EACrD;EAEAM,cAAcA,CACZD,UAAkB,EAClBH,QAAqB;IAErB,OAAO,IAAI,CAACV,IAAI,CACbe,GAAG,CAAc,IAAI,CAACZ,aAAa,GAAG,GAAG,GAAGU,UAAU,EAAEH,QAAQ,CAAC,CACjEH,IAAI,CAACV,UAAU,CAAC,IAAI,CAACI,aAAa,CAACO,WAAW,CAAC,CAAC;EACrD;EAEAQ,cAAcA,CAACH,UAAkB;IAC/B,OAAO,IAAI,CAACb,IAAI,CACbiB,MAAM,CAAiB,IAAI,CAACd,aAAa,GAAG,GAAG,GAAGU,UAAU,CAAC,CAC7DN,IAAI,CAACV,UAAU,CAAC,IAAI,CAACI,aAAa,CAACO,WAAW,CAAC,CAAC;EACrD;;AAxCWV,eAAe,C;mBAAfA,eAAe,EAAAoB,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA,GAAAH,EAAA,CAAAC,QAAA,CAAAG,EAAA,CAAAC,aAAA;AAAA;AAAfzB,eAAe,C;SAAfA,eAAe;EAAA0B,OAAA,EAAf1B,eAAe,CAAA2B,IAAA;EAAAC,UAAA,EAFd;AAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}