{"ast":null,"code":"import { createAction, props } from '@ngrx/store';\nexport const getPostsByUserId = createAction('[PostsList Page] Get posts list', props());\nexport const getPostsByUserIdSuccess = createAction('[PostsList Page] Get posts list Success', props());\nexport const getPostsByUserIdFailure = createAction('[PostsList Page] Get posts list Failure', props());\nexport const deletePost = createAction('[PostsList Page] Delete post', props());\nexport const deletePostSuccess = createAction('[PostsList Page] Delete post Success', props());\nexport const deletePostFailure = createAction('[PostsList Page] Delete post Failure', props());\nexport const getPostById = createAction('[PostForm Page] Get post', props());\nexport const getPostByIdSuccess = createAction('[PostForm Page] Get post Success', props());\nexport const getPostByIdFailure = createAction('[PostForm Page] Get post Failure', props());\nexport const createPost = createAction('[PostForm Page] Create post', props());\nexport const createPostSuccess = createAction('[PostForm Page] Create post Success', props());\nexport const createPostFailure = createAction('[PostForm Page] Create post Failure', props());\nexport const updatePost = createAction('[PostForm Page] Update post', props());\nexport const updatePostSuccess = createAction('[PostForm Page] Update post Success', props());\nexport const updatePostFailure = createAction('[PostForm Page] Update post Failure', props());\nexport const getPosts = createAction('[Home Page] Get posts list');\nexport const getPostsSuccess = createAction('[Home Page] Get posts list Success', props());\nexport const getPostsFailure = createAction('[Home Page] Get posts list Failure', props());\nexport const likePost = createAction('[Home Page] Like post', props());\nexport const likePostSuccess = createAction('[Home Page] Like post Success', props());\nexport const likePostFailure = createAction('[Home Page] Like post Failure', props());\nexport const dislikePost = createAction('[Home Page] Dislike post', props());\nexport const dislikePostSuccess = createAction('[Home Page] Dislike post Success', props());\nexport const dislikePostFailure = createAction('[Home Page] Dislike post Failure', props());","map":{"version":3,"names":["createAction","props","getPostsByUserId","getPostsByUserIdSuccess","getPostsByUserIdFailure","deletePost","deletePostSuccess","deletePostFailure","getPostById","getPostByIdSuccess","getPostByIdFailure","createPost","createPostSuccess","createPostFailure","updatePost","updatePostSuccess","updatePostFailure","getPosts","getPostsSuccess","getPostsFailure","likePost","likePostSuccess","likePostFailure","dislikePost","dislikePostSuccess","dislikePostFailure"],"sources":["/Users/pierre-antoinetremblay/Desktop/blog-uoc-project-front/src/app/Post/actions/post.action.ts"],"sourcesContent":["import { HttpErrorResponse } from '@angular/common/http';\r\nimport { createAction, props } from '@ngrx/store';\r\nimport { PostDTO } from '../models/post.dto';\r\n\r\nexport const getPostsByUserId = createAction(\r\n  '[PostsList Page] Get posts list',\r\n  props<{ userId: string }>()\r\n);\r\nexport const getPostsByUserIdSuccess = createAction(\r\n  '[PostsList Page] Get posts list Success',\r\n  props<{ posts: PostDTO[] }>()\r\n);\r\n\r\nexport const getPostsByUserIdFailure = createAction(\r\n  '[PostsList Page] Get posts list Failure',\r\n  props<{ payload: HttpErrorResponse }>()\r\n);\r\n\r\nexport const deletePost = createAction(\r\n  '[PostsList Page] Delete post',\r\n  props<{ postId: string }>()\r\n);\r\nexport const deletePostSuccess = createAction(\r\n  '[PostsList Page] Delete post Success',\r\n  props<{ postId: string }>()\r\n);\r\n\r\nexport const deletePostFailure = createAction(\r\n  '[PostsList Page] Delete post Failure',\r\n  props<{ payload: HttpErrorResponse }>()\r\n);\r\n\r\nexport const getPostById = createAction(\r\n  '[PostForm Page] Get post',\r\n  props<{ postId: string }>()\r\n);\r\nexport const getPostByIdSuccess = createAction(\r\n  '[PostForm Page] Get post Success',\r\n  props<{ post: PostDTO }>()\r\n);\r\n\r\nexport const getPostByIdFailure = createAction(\r\n  '[PostForm Page] Get post Failure',\r\n  props<{ payload: HttpErrorResponse }>()\r\n);\r\n\r\nexport const createPost = createAction(\r\n  '[PostForm Page] Create post',\r\n  props<{ post: PostDTO }>()\r\n);\r\nexport const createPostSuccess = createAction(\r\n  '[PostForm Page] Create post Success',\r\n  props<{ post: PostDTO }>()\r\n);\r\n\r\nexport const createPostFailure = createAction(\r\n  '[PostForm Page] Create post Failure',\r\n  props<{ payload: HttpErrorResponse }>()\r\n);\r\n\r\nexport const updatePost = createAction(\r\n  '[PostForm Page] Update post',\r\n  props<{ postId: string; post: PostDTO }>()\r\n);\r\nexport const updatePostSuccess = createAction(\r\n  '[PostForm Page] Update post Success',\r\n  props<{ postId: string; post: PostDTO }>()\r\n);\r\n\r\nexport const updatePostFailure = createAction(\r\n  '[PostForm Page] Update post Failure',\r\n  props<{ payload: HttpErrorResponse }>()\r\n);\r\n\r\nexport const getPosts = createAction('[Home Page] Get posts list');\r\nexport const getPostsSuccess = createAction(\r\n  '[Home Page] Get posts list Success',\r\n  props<{ posts: PostDTO[] }>()\r\n);\r\n\r\nexport const getPostsFailure = createAction(\r\n  '[Home Page] Get posts list Failure',\r\n  props<{ payload: HttpErrorResponse }>()\r\n);\r\n\r\nexport const likePost = createAction(\r\n  '[Home Page] Like post',\r\n  props<{ postId: string }>()\r\n);\r\nexport const likePostSuccess = createAction(\r\n  '[Home Page] Like post Success',\r\n  props<{ postId: string }>()\r\n);\r\n\r\nexport const likePostFailure = createAction(\r\n  '[Home Page] Like post Failure',\r\n  props<{ payload: HttpErrorResponse }>()\r\n);\r\n\r\nexport const dislikePost = createAction(\r\n  '[Home Page] Dislike post',\r\n  props<{ postId: string }>()\r\n);\r\nexport const dislikePostSuccess = createAction(\r\n  '[Home Page] Dislike post Success',\r\n  props<{ postId: string }>()\r\n);\r\n\r\nexport const dislikePostFailure = createAction(\r\n  '[Home Page] Dislike post Failure',\r\n  props<{ payload: HttpErrorResponse }>()\r\n);\r\n"],"mappings":"AACA,SAASA,YAAY,EAAEC,KAAK,QAAQ,aAAa;AAGjD,OAAO,MAAMC,gBAAgB,GAAGF,YAAY,CAC1C,iCAAiC,EACjCC,KAAK,EAAsB,CAC5B;AACD,OAAO,MAAME,uBAAuB,GAAGH,YAAY,CACjD,yCAAyC,EACzCC,KAAK,EAAwB,CAC9B;AAED,OAAO,MAAMG,uBAAuB,GAAGJ,YAAY,CACjD,yCAAyC,EACzCC,KAAK,EAAkC,CACxC;AAED,OAAO,MAAMI,UAAU,GAAGL,YAAY,CACpC,8BAA8B,EAC9BC,KAAK,EAAsB,CAC5B;AACD,OAAO,MAAMK,iBAAiB,GAAGN,YAAY,CAC3C,sCAAsC,EACtCC,KAAK,EAAsB,CAC5B;AAED,OAAO,MAAMM,iBAAiB,GAAGP,YAAY,CAC3C,sCAAsC,EACtCC,KAAK,EAAkC,CACxC;AAED,OAAO,MAAMO,WAAW,GAAGR,YAAY,CACrC,0BAA0B,EAC1BC,KAAK,EAAsB,CAC5B;AACD,OAAO,MAAMQ,kBAAkB,GAAGT,YAAY,CAC5C,kCAAkC,EAClCC,KAAK,EAAqB,CAC3B;AAED,OAAO,MAAMS,kBAAkB,GAAGV,YAAY,CAC5C,kCAAkC,EAClCC,KAAK,EAAkC,CACxC;AAED,OAAO,MAAMU,UAAU,GAAGX,YAAY,CACpC,6BAA6B,EAC7BC,KAAK,EAAqB,CAC3B;AACD,OAAO,MAAMW,iBAAiB,GAAGZ,YAAY,CAC3C,qCAAqC,EACrCC,KAAK,EAAqB,CAC3B;AAED,OAAO,MAAMY,iBAAiB,GAAGb,YAAY,CAC3C,qCAAqC,EACrCC,KAAK,EAAkC,CACxC;AAED,OAAO,MAAMa,UAAU,GAAGd,YAAY,CACpC,6BAA6B,EAC7BC,KAAK,EAAqC,CAC3C;AACD,OAAO,MAAMc,iBAAiB,GAAGf,YAAY,CAC3C,qCAAqC,EACrCC,KAAK,EAAqC,CAC3C;AAED,OAAO,MAAMe,iBAAiB,GAAGhB,YAAY,CAC3C,qCAAqC,EACrCC,KAAK,EAAkC,CACxC;AAED,OAAO,MAAMgB,QAAQ,GAAGjB,YAAY,CAAC,4BAA4B,CAAC;AAClE,OAAO,MAAMkB,eAAe,GAAGlB,YAAY,CACzC,oCAAoC,EACpCC,KAAK,EAAwB,CAC9B;AAED,OAAO,MAAMkB,eAAe,GAAGnB,YAAY,CACzC,oCAAoC,EACpCC,KAAK,EAAkC,CACxC;AAED,OAAO,MAAMmB,QAAQ,GAAGpB,YAAY,CAClC,uBAAuB,EACvBC,KAAK,EAAsB,CAC5B;AACD,OAAO,MAAMoB,eAAe,GAAGrB,YAAY,CACzC,+BAA+B,EAC/BC,KAAK,EAAsB,CAC5B;AAED,OAAO,MAAMqB,eAAe,GAAGtB,YAAY,CACzC,+BAA+B,EAC/BC,KAAK,EAAkC,CACxC;AAED,OAAO,MAAMsB,WAAW,GAAGvB,YAAY,CACrC,0BAA0B,EAC1BC,KAAK,EAAsB,CAC5B;AACD,OAAO,MAAMuB,kBAAkB,GAAGxB,YAAY,CAC5C,kCAAkC,EAClCC,KAAK,EAAsB,CAC5B;AAED,OAAO,MAAMwB,kBAAkB,GAAGzB,YAAY,CAC5C,kCAAkC,EAClCC,KAAK,EAAkC,CACxC"},"metadata":{},"sourceType":"module","externalDependencies":[]}