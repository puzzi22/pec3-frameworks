{"ast":null,"code":"import { catchError } from 'rxjs/operators';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nimport * as i2 from \"src/app/Shared/Services/shared.service\";\nexport class UserService {\n  constructor(http, sharedService) {\n    this.http = http;\n    this.sharedService = sharedService;\n    this.controller = 'users';\n    this.urlBlogUocApi = 'http://localhost:3000/' + this.controller;\n  }\n  register(user) {\n    return this.http.post(this.urlBlogUocApi, user).pipe(catchError(this.sharedService.handleError));\n  }\n  updateUser(userId, user) {\n    return this.http.put(this.urlBlogUocApi + '/' + userId, user).pipe(catchError(this.sharedService.handleError));\n  }\n  getUserById(userId) {\n    return this.http.get(this.urlBlogUocApi + '/' + userId).pipe(catchError(this.sharedService.handleError));\n  }\n}\nUserService.ɵfac = function UserService_Factory(t) {\n  return new (t || UserService)(i0.ɵɵinject(i1.HttpClient), i0.ɵɵinject(i2.SharedService));\n};\nUserService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: UserService,\n  factory: UserService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"names":["catchError","UserService","constructor","http","sharedService","controller","urlBlogUocApi","register","user","post","pipe","handleError","updateUser","userId","put","getUserById","get","i0","ɵɵinject","i1","HttpClient","i2","SharedService","factory","ɵfac","providedIn"],"sources":["/Users/pierre-antoinetremblay/Desktop/blog-uoc-project-front/src/app/User/services/user.service.ts"],"sourcesContent":["import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { catchError } from 'rxjs/operators';\nimport { SharedService } from 'src/app/Shared/Services/shared.service';\nimport { UserDTO } from '../models/user.dto';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class UserService {\n  private urlBlogUocApi: string;\n  private controller: string;\n\n  constructor(private http: HttpClient, private sharedService: SharedService) {\n    this.controller = 'users';\n    this.urlBlogUocApi = 'http://localhost:3000/' + this.controller;\n  }\n\n  register(user: UserDTO): Observable<UserDTO> {\n    return this.http\n      .post<UserDTO>(this.urlBlogUocApi, user)\n      .pipe(catchError(this.sharedService.handleError));\n  }\n\n  updateUser(userId: string, user: UserDTO): Observable<UserDTO> {\n    return this.http\n      .put<UserDTO>(this.urlBlogUocApi + '/' + userId, user)\n      .pipe(catchError(this.sharedService.handleError));\n  }\n\n  getUserById(userId: string): Observable<UserDTO> {\n    return this.http\n      .get<UserDTO>(this.urlBlogUocApi + '/' + userId)\n      .pipe(catchError(this.sharedService.handleError));\n  }\n}\n"],"mappings":"AAGA,SAASA,UAAU,QAAQ,gBAAgB;;;;AAO3C,OAAM,MAAOC,WAAW;EAItBC,YAAoBC,IAAgB,EAAUC,aAA4B;IAAtD,KAAAD,IAAI,GAAJA,IAAI;IAAsB,KAAAC,aAAa,GAAbA,aAAa;IACzD,IAAI,CAACC,UAAU,GAAG,OAAO;IACzB,IAAI,CAACC,aAAa,GAAG,wBAAwB,GAAG,IAAI,CAACD,UAAU;EACjE;EAEAE,QAAQA,CAACC,IAAa;IACpB,OAAO,IAAI,CAACL,IAAI,CACbM,IAAI,CAAU,IAAI,CAACH,aAAa,EAAEE,IAAI,CAAC,CACvCE,IAAI,CAACV,UAAU,CAAC,IAAI,CAACI,aAAa,CAACO,WAAW,CAAC,CAAC;EACrD;EAEAC,UAAUA,CAACC,MAAc,EAAEL,IAAa;IACtC,OAAO,IAAI,CAACL,IAAI,CACbW,GAAG,CAAU,IAAI,CAACR,aAAa,GAAG,GAAG,GAAGO,MAAM,EAAEL,IAAI,CAAC,CACrDE,IAAI,CAACV,UAAU,CAAC,IAAI,CAACI,aAAa,CAACO,WAAW,CAAC,CAAC;EACrD;EAEAI,WAAWA,CAACF,MAAc;IACxB,OAAO,IAAI,CAACV,IAAI,CACba,GAAG,CAAU,IAAI,CAACV,aAAa,GAAG,GAAG,GAAGO,MAAM,CAAC,CAC/CH,IAAI,CAACV,UAAU,CAAC,IAAI,CAACI,aAAa,CAACO,WAAW,CAAC,CAAC;EACrD;;AAzBWV,WAAW,C;mBAAXA,WAAW,EAAAgB,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA,GAAAH,EAAA,CAAAC,QAAA,CAAAG,EAAA,CAAAC,aAAA;AAAA;AAAXrB,WAAW,C;SAAXA,WAAW;EAAAsB,OAAA,EAAXtB,WAAW,CAAAuB,IAAA;EAAAC,UAAA,EAFV;AAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}